// SOLUTION: Clean
// PROJECT: Clean.Shared
// FILE: IEntity.cs
// CREATED: Mike Gardner

namespace Clean.Shared.Interfaces
{
    using System;

    /// <summary>   Interface that all repository entities must fulfill. </summary>
    public interface IEntity : IDisposable
    {
        #region Properties

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the Date/Time in UTC when the entity was created. </summary>
        ///
        /// <value> The created UTC. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        DateTime? CreatedUtc { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Primary key field. </summary>
        ///
        /// <value> The identifier. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        long Id { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the Date/Time in UTC when the entity was modified. </summary>
        ///
        /// <value> The modified UTC. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        DateTime? ModifiedUtc { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the identifier of the tenant. </summary>
        ///
        /// <value> The identifier of the tenant. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        long TenantId { get; set; }

        #endregion

        #region Other Members

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets the validate. </summary>
        ///
        /// <returns>   An IError. </returns>
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        IError Validate();

        #endregion
    }
}